[1mdiff --git a/instafollowo.py b/instafollowo.py[m
[1mindex f6881ec..7999ead 100644[m
[1m--- a/instafollowo.py[m
[1m+++ b/instafollowo.py[m
[36m@@ -3,6 +3,11 @@[m [mimport random[m
 import re[m
 import time[m
 import json[m
[32m+[m[32mimport instaloader[m
[32m+[m
[32m+[m[32m#teszt fiok:[m
[32m+[m[32m#gmail.hu instafollowo pe1234[m
[32m+[m[32m#instagram instfow1 pe1234[m
 [m
 class INSTAFOLLOWOBOT:[m
 [m
[36m@@ -12,9 +17,27 @@[m [mclass INSTAFOLLOWOBOT:[m
     url_login = url_base + "/accounts/login/ajax/"[m
     url_logout = url_base + "/accounts/logout/"[m
 [m
[32m+[m[32m    #username required[m
     url_profile = url_base + "/{}/"[m
 [m
[31m-    # Fake headers[m
[32m+[m[32m    #userid required[m
[32m+[m[32m    url_follow = url_base + "/web/friendships/{}/follow/"[m
[32m+[m[32m    url_unfollow = url_base + "/web/friendships/{}/unfollow/"[m
[32m+[m
[32m+[m[32m    #username required[m
[32m+[m[32m    url_profile = url_base + "/{}/"[m
[32m+[m
[32m+[m[32m    #mediaid required[m
[32m+[m[32m    url_like = url_base + "/web/likes/{}/like/"[m
[32m+[m[32m    url_unlike = url_base + "/web/likes/{}/unlike/"[m
[32m+[m
[32m+[m[32m    #tag (maxid)[m
[32m+[m[32m    url_media_by_tag = url_base + "/explore/tags/{}/?__a=1"[m
[32m+[m[32m    url_media_by_tag_maxid = url_base + "/explore/tags/{}/?__a=1&max_id={}/"[m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32m    #Fake headers[m
[32m+[m[32m    #todo: add fake_useragent maybe[m
     headers_list = [[m
         "Mozilla/5.0 (Windows NT 5.1; rv:41.0) Gecko/20100101"\[m
         " Firefox/41.0",[m
[36m@@ -34,10 +57,17 @@[m [mclass INSTAFOLLOWOBOT:[m
         self.password = password[m
         self.user_agent = self.headers_list[random.randrange(0,4)][m
 [m
[32m+[m[32m        self.loggedin = False[m
         self.session = requests.Session()[m
[32m+[m[32m        self.instaloader = instaloader.Instaloader()[m
[32m+[m
[32m+[m[32m        #self.followercount = 0[m
[32m+[m[32m        #self.followingcount = 0[m
[32m+[m
[32m+[m[32m        self.login()[m
 [m
[31m-    [m
 [m
[32m+[m[32m    #todo: more exception checks[m
     def login(self):[m
 [m
         self.session.headers.update([m
[36m@@ -52,32 +82,34 @@[m [mclass INSTAFOLLOWOBOT:[m
             "password": self.password[m
         }[m
 [m
[31m-[m
         # finding csrftoken[m
         r = self.session.get(self.url_base)[m
         csrf_token = re.search('(?<="csrf_token":")\w+', r.text).group(0)[m
[31m-        self.session.headers.update({"X-CSRFToken": csrf_token})[m
[31m-        time.sleep(5 * random.random())[m
[32m+[m[32m        self.session.headers.update({'X-CSRFToken': csrf_token})[m
 [m
         login = self.session.post(self.url_login, data = self.login_data, allow_redirects = True)[m
[32m+[m[32m        self.session.headers.update({'X-CSRFToken': login.cookies['csrftoken']})[m
[32m+[m
         login_json = login.json()[m
 [m
[31m-        if (login_json.get("authenticated") is True):[m
[32m+[m[32m        if (login_json.get("authenticated") and login.status_code == 200):[m
             print("Successful login!")[m
[32m+[m[32m            self.loggedin = True[m
             self.session.cookies["csrftoken"] = csrf_token[m
         else:[m
             print("Login error")[m
 [m
[32m+[m[32m    #todo[m
     #def logout(self):[m
 [m
         #logout_data = [m
         #logout = self.session.post(self.url_logout, data=logout_data)[m
 [m
[32m+[m[32m    #returns json[m
[32m+[m[32m    def get_userdata(self, username):[m
[32m+[m[32m        url_profile = self.url_profile.format(username)[m
 [m
[31m-    def get_data(self):[m
[31m-        url_myprofile = self.url_profile.format(self.username)[m
[31m-[m
[31m-        i = self.session.get(url_myprofile)[m
[32m+[m[32m        i = self.session.get(url_profile)[m
         json_data = json.loads([m
             re.search([m
                 "window._sharedData = (.*?);</script>", i.text, re.DOTALL[m
[36m@@ -86,16 +118,111 @@[m [mclass INSTAFOLLOWOBOT:[m
 [m
         user_data = json_data["graphql"]["user"][m
 [m
[31m-        current_username = user_data["username"][m
[31m-        followers = user_data["edge_followed_by"]["count"][m
[31m-        following = user_data["edge_follow"]["count"][m
[32m+[m[32m        return user_data[m
[32m+[m
[32m+[m[32m        #current_username = user_data["username"][m
[32m+[m[32m        #followers = user_data["edge_followed_by"]["count"][m
[32m+[m[32m        #following = user_data["edge_follow"]["count"][m
[32m+[m
[32m+[m[32m        #self.followercount += int(followers)[m
[32m+[m[32m        #self.followingcount += int(following)[m
[32m+[m
[32m+[m[32m    def follow(self, userid):[m
[32m+[m[32m        url_follow = self.url_follow.format(userid)[m
[32m+[m
[32m+[m[32m        if self.loggedin:[m
[32m+[m[32m            follow = self.session.post(url_follow)[m
[32m+[m
[32m+[m[32m            if follow.status_code == 200:[m
[32m+[m[32m                #self.followercount += 1[m
[32m+[m[32m                print("Followed " + userid)[m
[32m+[m
[32m+[m[32m    def unfollow(self, userid):[m
[32m+[m[32m        url_unfollow = self.url_unfollow.format(userid)[m
 [m
[32m+[m[32m        if self.loggedin:[m
[32m+[m[32m            unfollow = self.session.post(url_unfollow)[m
 [m
[31m-        print("Logged in as {} with {} followers and following {}".format(current_username, followers, following))[m
[32m+[m[32m            if unfollow.status_code == 200:[m
[32m+[m[32m                #self.followercount -= 1[m
[32m+[m[32m                print("Unfollowed " + userid)[m
 [m
[32m+[m[32m    def like(self, mediaid):[m
[32m+[m[32m        url_like = self.url_like.format(mediaid)[m
[32m+[m
[32m+[m[32m        if self.loggedin:[m
[32m+[m[32m            like = self.session.post(url_like)[m
[32m+[m[32m            print("Liked " + mediaid)[m
[32m+[m
[32m+[m[32m    def unlike(self, mediaid):[m
[32m+[m[32m        url_unlike = self.url_unlike.format(mediaid)[m
[32m+[m
[32m+[m[32m        if self.loggedin:[m
[32m+[m[32m            like = self.session.post(url_unlike)[m
[32m+[m[32m            print("Unliked " + mediaid)[m
[32m+[m
[32m+[m[32m    #checks if a profile is following the logged in profile(or has requested to follow)[m
[32m+[m[32m    #returns false if profiles are the same[m
[32m+[m[32m    def is_followed_by(self, username):[m
[32m+[m[32m        user_info = self.get_userdata(username)[m
[32m+[m
[32m+[m[32m        follows_viewer = user_info["follows_viewer"][m
[32m+[m[32m        has_requested_viewer = user_info["has_requested_viewer"][m
[32m+[m
[32m+[m[32m        if (follows_viewer or has_requested_viewer):[m
[32m+[m[32m            print("Followed by " + username)[m
[32m+[m[32m            return True[m
[32m+[m[32m        else:[m
[32m+[m[32m            print("Not followed by " + username)[m
[32m+[m[32m            return False[m
[32m+[m
[32m+[m[32m    #checks if the logged in profile is following a profile(or has requested to follow)[m
[32m+[m[32m    def is_following(self, username):[m
[32m+[m[32m        user_info = self.get_userdata(username)[m
[32m+[m
[32m+[m[32m        followed_by_viewer = user_info["followed_by_viewer"][m
[32m+[m[32m        requested_by_viewer = user_info["requested_by_viewer"][m
[32m+[m
[32m+[m[32m        if (followed_by_viewer or requested_by_viewer):[m
[32m+[m[32m            print("Following " + username)[m
[32m+[m[32m            return True[m
[32m+[m[32m        else:[m
[32m+[m[32m            print("Not following " + username)[m
[32m+[m[32m            return False[m
[32m+[m
[32m+[m[32m    def get_username_by_userid(self, userid):[m
[32m+[m[32m        if self.loggedin:[m
[32m+[m[32m            profile = instaloader.Profile.from_id(self.instaloader.context, userid)[m
[32m+[m[32m            username = profile